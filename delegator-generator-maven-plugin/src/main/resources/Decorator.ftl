<#import "GenericTypeParameters.ftl" as g/>
<#if javaSource.packageName?has_content>package ${javaSource.packageName};

</#if><#list javaSource.imports as import>import ${import};
</#list>

/**
 * Decorator class for ${javaClass.name} that simplfies decoration.
 *
 * Generated by com.robertboothby:delegator-generator-maven-plugin
 */
public class ${javaClass.name}Decorator<@g.genericParameters typeParameters = javaClass.typeParameters/><#if javaClass.interface>implements<#else>extends</#if> ${javaClass.name}<@g.genericNames typeParameters = javaClass.typeParameters/>{

    private final ${javaClass.name}<@g.genericNames typeParameters = javaClass.typeParameters/> decorated;

    public ${javaClass.name}Decorator(${javaClass.name}<@g.genericNames typeParameters = javaClass.typeParameters/> decorated) {
        this.decorated = decorated;
    }

    <#list javaClass.methods as method><#if !method.modifiers?seq_contains("static") && !method.modifiers?seq_contains("final") && !method.modifiers?seq_contains("private")><#include "DecoratorMethod.ftl"/></#if></#list>
}
